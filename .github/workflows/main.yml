# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - uses: azure/docker-login@v1
        with:
          login-server: mcwworkshop.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # - run: |
      #     docker build . -t mcwworkshop.azurecr.io/tailspintoys/web:${{ github.sha }}
      #     docker push mcwworkshop.azurecr.io/tailspintoys/web:${{ github.sha }}

      - name: Upload arm templates to workflow
        uses: actions/upload-artifact@v2
        with:
          name: armtemplate
          path: ${{ github.workspace }}/armtemplate/

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download armtemplate
        uses: actions/download-artifact@v2
        with:
          name: armtemplate
      
      - run: ls ${{ github.workspace }}

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - run: $output = az deployment group create --resource-group mcwworkshoprg --template-file azuredeploy.json --parameters environment=dev --parameters administratorLogin=JallaJalla --parameters administratorLoginPassword=${{ secrets.DBPASSWORD }}
      # - name: Deploy ARM Template
      #   uses: azure/CLI@v1
      #   with:
      #     inlineScript: |
      #       az deployment group create --resource-group mcwworkshoprg --template-file azuredeploy.json --parameters environment=dev --parameters administratorLogin=JallaJalla --parameters administratorLoginPassword=${{ secrets.DBPASSWORD }}
      #       # $armOutputObj = '$output' | ConvertFrom-Json
            # $webAppName = $armOutputObj.webappname.value
            # Write-Host $webAppName
            # az webapp config container set `
            #               --resource-group mcwworkshoprg `
            #               --name $webappname `
            #               --docker-custom-image-name mcwworkshop.azurecr.io/tailspintoys/web:${{ github.sha }} `
            #               --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }} `
            #               --docker-registry-server-url https://mcwworkshop.azurecr.io `
            #               --docker-registry-server-user ${{ secrets.REGISTRY_USERNAME }} `
            #               --slot staging
